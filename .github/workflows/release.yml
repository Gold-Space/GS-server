on:
  push:
    tags: ['v*']

name: Release

jobs:
  build:
    name: Upload Release Asset
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Create Release
        id: create_release
        run: |
          npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@v1.10.0
        with:
          mongodb-version: 4.4
      - name: Start Redis
        uses: supercharge/redis-github-action@6dc7a5eeaf9a8f860b6464e05195a15f8b9f3bbb # 1.7.0
        with:
          redis-version: 6
      - name: Cache pnpm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.x
          run_install: false
      - name: Install Dependencies
        run: |
          pnpm i --no-optional

      # - name: Test
      #   timeout-minutes: 10
      #   run: |
      #     npm run lint
      #     npm run test
      #     npm run test:e2e

      - name: Build project
        run: |
          pnpm run bundle
          cp ecosystem.bundle.config.js out/ecosystem.bundle.config.js
          zip -r release.zip out/

      - name: Test Bundle Server
        run: |
          bash scripts/workflow/test-server.sh

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: nx-core-release-${{ matrix.os }}.zip
          asset_content_type: application/zip

  build_other_platform:
    name: Build Other Platform
    strategy:
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache pnpm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.x
          run_install: false
      - name: Install Dependencies
        run: |
          pnpm i --no-optional
      - name: Build project
        run: |
          pnpm run bundle
          zip -r release.zip out/
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: nx-core-release-${{ matrix.os }}.zip
          asset_content_type: application/zip
